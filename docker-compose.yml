version: "3.8"


volumes:
  rabbitmq_data:
  pgdata: 
  kongadata:

networks:
  kong-net:
    driver: bridge

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.0.4
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.0.4
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
    ports:
      - "8000:8000"
  
  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga
    restart: always
    networks:
        - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
    depends_on:
      - kong
    ports:
      - "1337:1337"
    volumes:
      - kongadata:/app/kongadata
 
  ###################################
  # Order: The Order microservice
  ###################################
  order:
    build:
      context: ./
      dockerfile: order.Dockerfile
    image: javieryw/order:snackbite
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/order
      PYTHONUNBUFFERED: 1 

  ###################################
  # Pricing: The Pricing microservice
  ###################################
  pricing:
    build:
      context: ./
      dockerfile: pricing.Dockerfile
    image: javieryw/pricing:snackbite
    restart: always
    environment:
      PYTHONUNBUFFERED: 1 

  ###################################
  # Drive: The Driver microservice
  ###################################
  driver:
    build:
      context: ./
      dockerfile: driver.Dockerfile
    image: javieryw/driver:snackbite
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/driver
      PYTHONUNBUFFERED: 1 

  ###################################
  # Customer: The Customer microservice
  ###################################
  customer:
    build:
      context: ./
      dockerfile: customer.Dockerfile
    image: javieryw/customer:snackbite
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/customer
      PYTHONUNBUFFERED: 1 



  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: snackbite-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq
      
  #################################################
  # Activity Log: The Activity Log microservice
  #################################################
  activity_log:
    build:
      context: ./
      dockerfile: activity_log.Dockerfile
    image: javieryw/activity_log:snackbite
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ###################################
  # Error: The Error microservice
  ###################################
  error:
    build:
      context: ./
      dockerfile: error.Dockerfile
    image: javieryw/error:snackbite
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1 



  ###############################################
  # Order Management microservice
  ###############################################
  order_management:
    build:
      context: ./
      dockerfile: order_management.Dockerfile
    image: javieryw/order_management:snackbite
    restart: always
    depends_on:
      - order
      - customer
      - driver
      - pricing
      - activity_log
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      order_URL: http://order:5004/order
      customer_URL: http://customer:5002/customer
      driver_URL: http://driver:5001/driver
      pricing_URL: http://pricing:5003/pricing
      PYTHONUNBUFFERED: 1
    ports:
      - "5100:5100"

  ###############################################
  # Payment Management microservice
  ###############################################
  payment_management:
    build:
      context: ./
      dockerfile: payment_management.Dockerfile
    image: javieryw/payment_management:snackbite
    restart: always
    depends_on:
      - order
      - customer
      - activity_log
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      order_URL: http://order:5004/order
      customer_URL: http://customer:5002/customer
      driver_URL: http://driver:5001/driver
      pricing_URL: http://pricing:5003/pricing
      PYTHONUNBUFFERED: 1
    ports:
      - "5300:5300"


  ###############################################
  # Delivery Management microservice
  ###############################################
  delivery_management:
    build:
      context: ./
      dockerfile: delivery_management.Dockerfile
    image: javieryw/delivery_management:snackbite
    restart: always
    depends_on:
      - order
      - order_management
      - activity_log
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      order_URL: http://order:5004/order
      customer_URL: http://customer:5002/customer
      driver_URL: http://driver:5001/driver
      pricing_URL: http://pricing:5003/pricing
      PYTHONUNBUFFERED: 1
    ports:
      - "5200:5200"







